version: '3.9'
networks:
  plexnet:
    driver: bridge
services:
  #transmission-openvpn: ########## [ http://localhost:9091/transmission/web/ ]  VPN + torrentclient + UI
  #  cap_add:
  #    - NET_ADMIN
  #  volumes:
  #    - ${DOCKER_APPDATA_PATH}/transmission-openvpn:/config
  #    - ${DATA_PATH}/torrents:/torrents
  #    - ${DATA_PATH}:/data
  #    - /etc/localtime:/etc/localtime:ro #extra
  #  environment:
  #    - OPENVPN_PROVIDER=PIA
  #    - OPENVPN_CONFIG=us_east
  #    - OPENVPN_USERNAME=${VPN_USERNAME}
  #    - OPENVPN_PASSWORD=${VPN_PASSWORD}
  #    - PUID=1000
  #    - PGID=1000
  #    - UMASK=002 # this is octal so it is like chmod 770
  #    #- OPENVPN_OPTS="--inactive 3600 --ping 10 --ping-exit 60"
  #    - LOCAL_NETWORK=192.168.2.0/24
  #  logging:
  #    driver: json-file
  #    options:
  #      max-size: 10m
  #  ports:
  #    - '9091:9091'
  #  networks:
  #    - plexnet
  #  image: haugene/transmission-openvpn
  radarr: ####### [http://localhost:7878]  Radarr - movie management
    image: linuxserver/radarr
    container_name: ${DOCKER_CONTAINER_PREFIX}_radarr
    networks:
      - plexnet
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002 # this is octal so it is like chmod 770
      - TZ=${DOCKER_TIME_ZONE}
    volumes:
      - ${DOCKER_APPDATA_PATH}/radarr:/config
      - ${DATA_PATH}:/data
    ports:
      - '7878:7878'
    restart: unless-stopped
    depends_on:
      - prowlarr
  sonarr: ####### [http://localhost:8989]  Sonarr - TV management
    image: linuxserver/sonarr
    container_name: ${DOCKER_CONTAINER_PREFIX}_sonarr
    networks:
      - plexnet
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002 # this is octal so it is like chmod 770
      - TZ=${DOCKER_TIME_ZONE}
    volumes:
      - ${DOCKER_APPDATA_PATH}/sonarr:/config
      - ${DATA_PATH}:/data
    ports:
      - '8989:8989'
    restart: unless-stopped
    depends_on:
      - prowlarr
  bazarr: ####### [http://localhost:6767]  Bazarr - subtitle managment
    image: ghcr.io/linuxserver/bazarr
    container_name: ${DOCKER_CONTAINER_PREFIX}_bazarr
    networks:
      - plexnet
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002 # this is octal so it is like chmod 770
      - TZ=${DOCKER_TIME_ZONE}
    volumes:
      - ${DOCKER_APPDATA_PATH}/bazarr:/config
      - ${DATA_PATH}/media:/data/media
    ports:
      - '6767:6767'
    restart: unless-stopped
    depends_on:
      - prowlarr
  prowlarr: #### [http://localhost:9696]  prowlarr - searches indexes for content for sonarr,bazarr, and radarr
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: ${DOCKER_CONTAINER_PREFIX}_prowlarr
    networks:
      - plexnet
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002 # this is octal so it is like chmod 770
      - TZ=${DOCKER_TIME_ZONE}
    volumes:
      - ${DOCKER_APPDATA_PATH}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    depends_on:
      - deluge-vpn
  gaps: ######### [http://localhost:8484]  GAPS - identifies movie collections and missing films
    image: housewrecker/gaps:latest
    container_name: ${DOCKER_CONTAINER_PREFIX}_gaps
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002 # this is octal so it is like chmod 770
      - TZ=${DOCKER_TIME_ZONE}
    volumes:
      - ${DOCKER_APPDATA_PATH}/gaps:/config
    ports:
      - '8484:8484'
    restart: unless-stopped
  dozzle: ####### [http://localhost:9999]  Dozzle - Docker log reader
    image: amir20/dozzle:latest
    container_name: ${DOCKER_CONTAINER_PREFIX}_dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '9999:8080'
    restart: unless-stopped
  plex: ######### [http://localhost:32400/web/index.html]  PLEX - media server
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    container_name: ${DOCKER_CONTAINER_PREFIX}_plex
    #networks: # This line here would force plex onto the VPN network
    #  - plexnet
    environment:
      # - TZ=America/New_York
      - ADVERTISE_IP=${PLEX_ADVERTISE_IP}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - HOSTNAME="plex"
      - PUID=1000
      - PGID=1000
      - UMASK=002 # this is octal so it is like chmod 770
      - TZ=${DOCKER_TIME_ZONE}
    volumes:
      #- /home/waffles/docker/plex/config:/config
      #- /home/waffles/docker/plex/transcodes/temp:/transcode
      #- /mnt/external_drive:/media
      - ${PLEX_TRANSCODE_PATH}:/transcode
      - ${DOCKER_APPDATA_PATH}/plex:/config
      - ${DATA_PATH}/media:/data/media
    ports:
      - '32400:32400/tcp'
      - '3005:3005/tcp'
      - '8324:8324/tcp'
      - '32469:32469/tcp'
      - '1900:1900/udp'
      - '32410:32410/udp'
      - '32412:32412/udp'
      - '32413:32413/udp'
      - '32414:32414/udp'
  deluge-vpn: ### [http://localhost:8112]  Delude VPN + Privoxy - torrent downloader, wrapped in a VPN, also running Privoxy [8118]
    image: binhex/arch-delugevpn
    container_name: ${DOCKER_CONTAINER_PREFIX}_deluge-vpn
    cap_add:
      - NET_ADMIN
    networks:
      - plexnet
    environment:
      - VPN_ENABLED=yes
      - VPN_USER=${VPN_USERNAME}
      - VPN_PASS=${VPN_PASSWORD}
      - VPN_PROV=pia
      - VPN_CLIENT=openvpn # connection files located at https://www.privateinternetaccess.com/openvpn/openvpn.zip, copy these files to the deluge-vpn/config/openvpn folder
      - OPENVPN_CONFIG=us_east
      - STRICT_PORT_FORWARD=yes
      - ENABLE_PRIVOXY=yes
      - LAN_NETWORK=${VPN_LAN_SUBNET}
      - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
      - DELUGE_DAEMON_LOG_LEVEL=info
      - DELUGE_WEB_LOG_LEVEL=info
      #- VPN_INPUT_PORTS=1234
      #- VPN_OUTPUT_PORTS=5678
      - DEBUG=false
      - PUID=1000
      - PGID=1000
      - UMASK=002 # this is octal so it is like chmod 770
      - TZ=${DOCKER_TIME_ZONE}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - ${DOCKER_APPDATA_PATH}/deluge-vpn:/config
      - ${DATA_PATH}/torrents:/data/torrents
      - ${DATA_PATH}:/data
    ports:
      - '8112:8112'
      - '8118:8118'
      - '58846:58846'
      - '58946:58946'
    restart: unless-stopped
  #sabnzbd-vpn: ## [http://localhost:8080]  SABnzbd VPN - usenet downloader, wrapped in a VPN
  #  image: binhex/arch-sabnzbdvpn
  #  container_name: ${DOCKER_CONTAINER_PREFIX}_sabnzbd-vpn
  #  cap_add:
  #    - NET_ADMIN
  #  environment:
  #    - VPN_ENABLED=yes
  #    - VPN_USER=${VPN_USERNAME}
  #    - VPN_PASS=${VPN_PASSWORD}
  #    - VPN_PROV=pia
  #    - VPN_CLIENT=openvpn # connection files located at https://www.privateinternetaccess.com/openvpn/openvpn.zip, copy these files to the deluge-vpn/config/openvpn folder
  #    - STRICT_PORT_FORWARD=no
  #    - ENABLE_PRIVOXY=no
  #    - LAN_NETWORK=${VPN_LAN_SUBNET}
  #    - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
  #    #- VPN_INPUT_PORTS=1234
  #    #- VPN_OUTPUT_PORTS=5678
  #    - DEBUG=false
  #    - PUID=1000
  #    - PGID=1000
  #    - UMASK=002 # this is octal so it is like chmod 770
  #    - TZ=${DOCKER_TIME_ZONE}
  #  volumes:
  #    - /etc/localtime:/etc/localtime:ro
  #    - ${DOCKER_APPDATA_PATH}/sabnzbd-vpn:/config
  #    - ${DATA_PATH}/usenet:/data/usenet
  #  ports:
  #    - '8080:8080'
  #    - '8090:8090'
  #    #- '8118:8118' # disabled because privoxy is running in the torrent container
  #  restart: unless-stopped
  #pia-vpn:
  #  container_name: pia-vpn
  #  image: itsdaspecialk/pia-openvpn
  #  restart: always
  #  cap_add:
  #    - net_admin
  #  dns:
  #    - 209.222.18.222
  #    - 209.222.18.218
  #  ports:
  #    - 9091:9091
  #  #volumes:
  #  #  - ${DOCKER_APPDATA_PATH}:/path/in/container:ro
  #  environment:
  #    #- PUID=1000
  #    #- PGID=1000
  #    #- UMASK=002 # this is octal so it is like chmod 770
  #    - REGION='US East'
  #    - USERNAME=${VPN_USERNAME}
  #    - PASSWORD=${VPN_PASSWORD}
  #  #command: ['--auth-user-pass', '/path/in/container/auth.conf']
  ###########################################################################################
  #prowlarr replaces nzbhydra2 and jackett
  #
  ###########################################################################################
  #nzbhydra2: #### [http://localhost:5076]  NZBHydra2 - meta search for newznab indexers and torznab trackers
  #  image: linuxserver/nzbhydra2
  #  container_name: ${DOCKER_CONTAINER_PREFIX}_nzbhydra2
  #  networks:
  #    - docker_internal_network
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - TZ=${DOCKER_TIME_ZONE}
  #  volumes:
  #    - ${DOCKER_APPDATA_PATH}/nzbhydra2:/config
  #    - ${DATA_PATH}:/data
  #  ports:
  #    - '5076:5076'
  #  restart: unless-stopped
  #jackett: ###### [http://localhost:9117]  Jackett - indexer scraping & translation logic
  #  image: ghcr.io/linuxserver/jackett
  #  container_name: ${DOCKER_CONTAINER_PREFIX}_jackett
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - TZ=${DOCKER_TIME_ZONE}
  #  volumes:
  #    - ${DOCKER_APPDATA_PATH}/jackett:/config
  #    - ${DATA_PATH}:/data
  #  ports:
  #    - '9117:9117'
  #  restart: unless-stopped
  #transmission:
  #  container_name: transmission
  #  image: linuxserver/transmission
  #  restart: always
  #  network_mode: 'service:pia-vpn'
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - UMASK=002 # this is octal so it is like chmod 770
  #    - TZ=${DOCKER_TIME_ZONE}
  #  depends_on:
  #    - pia-vpn
  #  volumes:
  #    - ${DOCKER_APPDATA_PATH}/transmission:/config
  #    - ${DATA_PATH}:/data/
  #    #${DATA_PATH}/torrents:/data/torrents
